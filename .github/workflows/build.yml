name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with gradle
        run: ./gradlew test
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.0.1
        with:
          generate-branches-badge: true
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
              git config --global user.name 'YOUR NAME HERE'
              git config --global user.email 'YOUR-GITHUB-USERID@users.noreply.github.com'
              git add -A
              git commit -m "Autogenerated JaCoCo coverage badge"
              git push
          fi

        - name: Upload JaCoCo coverage report
          uses: actions/upload-artifact@v2
          with:
            name: jacoco-report
            path: target/site/jacoco/
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew sonarqube --info